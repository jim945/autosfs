
function pathname { regexp -s 2:"$2" '^(\(.*\))?(/.*)$' "$1"; }
function devname  { regexp -s "$2" '^(\(.*\)).*$' "$1"; }

function loopback_sfs_entry {
  realdev="$1"
  sfspath="$2"
  ls_cfg=""
  
  if test -f /boot/grub/loopsfs.cfg; then
    ls_cfg=/boot/grub/loopsfs.cfg
  fi
  
  if test -z $ls_cfg ; then
    return 1
  fi
  
  echo loopsfs.cfg $sfspath: yes

  menuentry "${realdev}${sfspath}" "$realdev" "$sfspath" "$ls_cfg" {
    set sfs_dev="$2"
    set sfs_path="$3"
    set cfg_path="$4"

    export sfs_dev
    export sfs_path

    set loopname=loopsfs
    
    while [ -d "(${loopname})/" ]; do
      set loopname=${loopname}_2
    done
    
    loopback $loopname "${sfs_dev}${sfs_path}"
    
    set root="(${loopname})"
    
    configfile $cfg_path
    loopback -d $loopname
  }
  return 0
}

function scan_sfs {
  sfs_dirs="$*"
  
  for dev in (*) ; do
    regexp -s sfs_device '\((.*)\)' $dev

    for sfs_dir in $sfs_dirs; do
      for file in \
          (${sfs_device})/${sfs_dir}/*.sfs \
          (${sfs_device})/${sfs_dir}/*.SFS \
      ; do
        if ! test -f "$file"; then continue; fi
        pathname $file sfspath

        if test -z "$dev" -o -z "$sfspath"; then continue; fi
        if ! loopback loopdev_scan "$file"; then continue; fi

        saved_root=$root
        set root=loopdev_scan

        if loopback_sfs_entry $dev $sfspath; then true;
        else  true; fi

        set root="${saved_root}"
        loopback -d loopdev_scan
      done
    done
  done
  return 0
}

insmod regexp
scan_sfs boot-sfs boot/boot-sfs bootsfs boot/bootsfs
